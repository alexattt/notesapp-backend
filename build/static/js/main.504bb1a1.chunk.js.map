{"version":3,"sources":["Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","content","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","useEffect","noteService","initialNotes","notesToShow","filter","map","find","n","changedNote","returnedNote","catch","error","alert","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"6JAceA,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,qBAAuB,iBAE3B,OACE,+BACGH,EAAKI,QACN,wBAAQC,QAASJ,EAAjB,SAAoCC,Q,gBCRpCI,EAAU,kCAiBD,EAfA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCoE5BK,EA9EH,WACV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACRC,IAEGhB,MAAK,SAAAiB,GACJP,EAASO,QAEZ,IAEH,IAqCMC,EAAcL,EAClBJ,EACAA,EAAMU,QAAO,SAAA5B,GAAI,OAAuB,IAAnBA,EAAKG,aAE5B,OACE,gCACE,uCACA,8BACE,yBAAQE,QAAS,kBAAMkB,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGK,EAAYE,KAAI,SAAA7B,GAAI,OACnB,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,iBAAkB,kBAnD/B,SAAAa,GACzB,IAAMd,EAAOkB,EAAMY,MAAK,SAAAC,GAAC,OAAIA,EAAEjB,KAAOA,KAChCkB,EAAW,2BAAQhC,GAAR,IAAcG,WAAYH,EAAKG,YAEhDsB,EACUX,EAAIkB,GACXvB,MAAK,SAAAwB,GACJd,EAASD,EAAMW,KAAI,SAAA7B,GAAI,OAAIA,EAAKc,KAAOA,EAAKd,EAAOiC,SAEpDC,OAAM,SAAAC,GACLC,MAAM,aAAD,OACUpC,EAAKI,QADf,sCAGLe,EAASD,EAAMU,QAAO,SAAAG,GAAC,OAAIA,EAAEjB,KAAOA,SAsCsBuB,CAAmBrC,EAAKc,MAArEd,EAAKc,SAGpB,uBAAMwB,SArCM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBrC,QAASgB,EACTsB,MAAM,IAAIC,MAAOC,cACjBzC,UAAW0C,KAAKC,SAAW,IAG7BrB,EACQgB,GACPhC,MAAK,SAAAwB,GACJd,EAASD,EAAM6B,OAAOd,IACtBZ,EAAW,QAyBX,UACE,uBACE2B,MAAO5B,EACP6B,SAxBiB,SAACV,GACxBlB,EAAWkB,EAAMW,OAAOF,UAyBpB,wBAAQG,KAAK,SAAb,yBCzERC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.504bb1a1.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important\r\n    ? 'make not important' : 'make important'\r\n\r\n  return (\r\n    <li>\r\n      {note.content} \r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/notes'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update }","import React, { useState, useEffect } from 'react'\nimport Note from './Note.js'\nimport noteService from './services/notes'\n\n\nconst App = () => {\n  const [notes, setNotes] = useState([]) \n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        alert(\n          `the note '${note.content}' was already deleted from server`\n        )\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    }\n\n    noteService\n    .create(noteObject)\n    .then(returnedNote => {\n      setNotes(notes.concat(returnedNote))\n      setNewNote('')\n    })\n  }\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll\n  ? notes\n  : notes.filter(note => note.important === true)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note =>\n          <Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)}/>\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>   \n    </div>\n  )\n}\n\nexport default App ","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}